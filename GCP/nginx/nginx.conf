# Define the user and worker processes
user  nginx;
worker_processes  1;

# Define the error log
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

# Configure the events module
events {
    worker_connections  1024;
}

# Define the HTTP server configuration
http {
    include       mime.types;
    default_type  application/octet-stream;

    # Log settings
    access_log  /var/log/nginx/access.log;

    # Define the upstream servers for the backend
    upstream backend {
        server backend:8080;  # Adjust this if your backend service is hosted elsewhere
    }

    # Define the upstream servers for the frontend
    upstream frontend {
        server frontend:80;  # Adjust this if your frontend service is hosted elsewhere
    }

    # Configure the server block
    server {
        listen       80;
        server_name  gaize.joseatolentino.com;  # Replace with your domain or use _ for default

        # Serve the frontend application
        location / {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route API requests to the backend
        location /data {
            proxy_pass http://backend/data;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location /result {
            proxy_pass http://backend/result;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
